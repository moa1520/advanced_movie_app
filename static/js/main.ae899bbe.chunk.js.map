{"version":3,"sources":["assets/nothing.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","Banner","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","number","bool","HomePresenter","nowPlaying","popular","upcoming","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","array","API_KEY","api","axios","create","baseURL","moviesApi","get","params","api_key","language","movieDetail","append_to_response","search","query","encodeURIComponent","tvApi","topRated","airingToday","tvDetail","HomeContainer","state","componentDidMount","a","data","results","setState","this","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","func","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","tv","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","TabContainer","Tab","ALink","DetailPresenter","result","original_title","name","backdrop_path","last_air_date","runtime","episode_run_time","genres","element","index","overview","href","videos","object","DetailContainer","match","push","history","parsedId","parseInt","isNaN","path","includes","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae899bbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nothing.fe502a59.jpg\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    font-size: 16px;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (\n        props.current\n            ? \"#3498db\"\n            : \"transparent\"\n    )};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Banner = styled.li`\n    font-size:26px;\n    margin: 0 30px;\n    color: red;\n    opacity: 0.8;\n    &:hover{opacity:1.0;}\n    transition: opacity 0.2s ease-in-out;\n`;\n\nexport default withRouter(({ location: {\n    pathname\n} }) => (\n        <Header>\n            <List>\n                <Banner>\n                    <SLink to='/'>Koflix</SLink>\n                </Banner>\n                <Item current={pathname === '/'}>\n                    <SLink to='/'>Movies</SLink>\n                </Item>\n                <Item current={pathname === '/tv'}>\n                    <SLink to='/tv'>TV</SLink>\n                </Item>\n                <Item current={pathname === '/search'}>\n                    <SLink to='/search'>Search</SLink>\n                </Item>\n            </List>\n        </Header>\n    ));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns:repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.prototype = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 100px;\n`;\n\nexport default() => <Container>\n    <span role='img' aria-label='Loading'>Loading...</span>\n</Container>","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span `\n    color: ${props => props.color};\n    font-size: 22px;\n`;\n\nconst Message = ({text, color}) => (<Container>\n    <Text color={color}>{text}</Text>\n</Container>);\n\nMessage.prototype = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    font-size: 12px;\n`;\n\nconst Image = styled.div `\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span `\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    transition: opacity 0.1s linear;\n    opacity: 0;\n`;\n\nconst ImageContainer = styled.div `\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span `\n    display: block;\n    margin-bottom: 2px;\n`;\n\nconst Year = styled.span `\n    font-size: 10px;\n    color:rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({\n    id,\n    imageUrl,\n    title,\n    rating,\n    year,\n    isMovie = false\n}) => (\n    <Link to={isMovie\n            ? `/movie/${id}`\n            : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={imageUrl\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                        : require(\"../assets/nothing.jpg\")}/>\n                <Rating>\n                    <span role='img' aria-label='rating'>⭐️</span>{' '}{rating}/10</Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.prototype = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message'\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => <>\n    <Helmet>\n        <title>Koflix | Movies</title>\n    </Helmet>\n    {loading\n        ? <Loader />\n        : <Container>\n            <Helmet>\n                <title>Koflix | Movies</title>\n            </Helmet>\n            {\n                nowPlaying && nowPlaying.length > 0 && <Section title='Now Playing'>{\n                    nowPlaying.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {\n                upcoming && upcoming.length > 0 && <Section title='Upcoming'>{\n                    upcoming.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {\n                popular && popular.length > 0 && <Section title='Popular'>{\n                    popular.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {error && <Message color='#e74c3c' text={error} />}\n        </Container>} </>\n\nHomePresenter.prototype = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from 'axios';\n\nconst API_KEY = '803b005f53021a61c58a9a205576b6f5';\nconst LANGUAGE = 'en-US';\n\nconst api = axios.create({baseURL: \"https://api.themoviedb.org/3\"});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get('/movie/now_playing', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    upcoming: () => api.get('/movie/upcoming', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    popular: () => api.get('/movie/popular', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    movieDetail: (id) => api.get(`/movie/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE,\n            append_to_response: 'videos'\n        }\n    }),\n    search: (query) => api.get('/search/movie', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE,\n            query : encodeURIComponent(query)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get('/tv/top_rated', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    popular: () => api.get('/tv/popular', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    airingToday: () => api.get('/tv/airing_today', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE\n        }\n    }),\n    tvDetail: (id) => api.get(`/tv/${id}`, {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE,\n            append_to_response: 'videos'\n        }\n    }),\n    search: (query) => api.get('/search/tv', {\n        params: {\n            api_key: API_KEY,\n            language: LANGUAGE,\n            query : encodeURIComponent(query)\n        }\n    })\n}\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React, {Component} from 'react';\nimport HomePresenter from './HomePresenter';\nimport {moviesApi} from 'api';\n\nexport default class HomeContainer extends Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    }\n\n    componentDidMount = async() => {\n        try {\n            const {\n                data: {\n                    results: nowPlaying\n                }\n            } = await moviesApi.nowPlaying();\n            const {\n                data: {\n                    results: upcoming\n                }\n            } = await moviesApi.upcoming();\n            const {\n                data: {\n                    results: popular\n                }\n            } = await moviesApi.popular();\n            this.setState({nowPlaying, upcoming, popular});\n        } catch  {\n            this.setState({error: \"Can't find movies information.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n\n    render() {\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        return <HomePresenter\n            nowPlaying={nowPlaying}\n            upcoming={upcoming}\n            popular={popular}\n            error={error}\n            loading={loading}/>\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    error,\n    loading,\n    handleSubmit,\n    updateTerm\n}) => <Container>\n        <Helmet><title>Koflix | Search</title></Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder='Search Movies or TV Shows...'\n                value={searchTerm}\n                onChange={updateTerm}></Input>\n        </Form>\n        {\n            loading\n                ? <Loader />\n                : <> {\n                    movieResults && movieResults.length > 0 && <Section title='Movie Results'>{\n                        movieResults.map(\n                            movie => <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                isMovie={true}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie\n                                    .release_date\n                                    .substring(0, 4)} />\n                        )\n                    }</Section>\n                } {\n                        tvResults && tvResults.length > 0 && <Section title='TV Results'>{\n                            tvResults.map(\n                                show => <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    title={show.original_name}\n                                    imageUrl={show.poster_path}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date && show\n                                        .first_air_date\n                                        .substring(0, 4)}\n                                    isMovie={false} />\n                            )\n                        }</Section>\n                    } {\n                        error && <Message color='#e74c3c' text={error} />\n                    } {\n                        movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text='Nothing found' color='#b2bec3' />\n                    }\n                </>\n        }\n    </Container>\n\nSearchPresenter.prototype = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React, {Component} from 'react'\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class SearchContainer extends Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: '',\n        error: null,\n        loading: false\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== '') {\n            this.searchByTerm();\n        }\n    }\n\n    updateTerm = (event) => {\n        const { target:{value} } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        try {\n            this.setState({ loading: true });\n            const {data:{results:movieResults}} = await moviesApi.search(searchTerm);\n            const {data:{results:tvResults}} = await tvApi.search(searchTerm);\n\n            this.setState({\n                movieResults,\n                tvResults\n            });\n        } catch {\n            this.setState({error: \"Can't find results.\"});\n        } finally {\n            this.setState({ loading: false });\n        }\n    }\n\n    render() {\n        const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n        return <SearchPresenter\n            movieResults={movieResults}\n            tvResults={tvResults}\n            searchTerm={searchTerm}\n            error={error}\n            loading={loading}\n            handleSubmit={this.handleSubmit}\n            updateTerm={this.updateTerm}\n            />;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from '../../Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (<> < Helmet > <title>Koflix | TV Shows</title>\n</Helmet>\n    {\n        loading\n            ? <Loader />\n            : <Container>\n                <Helmet>\n                    <title>Koflix | TV Shows</title>\n                </Helmet>\n                {\n                    topRated && topRated.length > 0 && <Section title='Top Rated'>{\n                        topRated.map(\n                            tv => <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                title={tv.original_name}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv\n                                    .first_air_date\n                                    .substring(0, 4)}\n                                isMovie={false} />\n                        )\n                    }</Section>\n                }\n                {\n                    popular && popular.length > 0 && <Section title='Popular'>{\n                        popular.map(\n                            tv => <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                title={tv.original_name}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv\n                                    .first_air_date\n                                    .substring(0, 4)}\n                                isMovie={false} />\n                        )\n                    }</Section>\n                }\n                {\n                    airingToday && airingToday.length > 0 && <Section title='Airing Today'>{\n                        airingToday.map(\n                            tv => <Poster\n                                key={tv.id}\n                                id={tv.id}\n                                title={tv.original_name}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                year={tv.first_air_date && tv\n                                    .first_air_date\n                                    .substring(0, 4)}\n                                isMovie={false} />\n                        )\n                    }</Section>\n                }\n                {error && <Message color='#e74c3c' text={error} />}\n            </Container>\n    } </>\n)\n\nTVPresenter.prototype = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React, {Component} from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class TVContainer extends Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true\n    }\n\n    componentDidMount = async () => {\n        try {\n            const {\n                data: {\n                    results: topRated\n                }\n            } = await tvApi.topRated();\n            const {\n                data: {\n                    results: popular\n                }\n            } = await tvApi.popular();\n            const {\n                data: {\n                    results: airingToday\n                }\n            } = await tvApi.airingToday();\n            this.setState({topRated, popular, airingToday});\n\n        } catch  {\n            this.setState({error: \"Can't find TV information.\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n    render() {\n        const {topRated, popular, airingToday, error, loading} = this.state;\n        return <TVPresenter\n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            error={error}\n            loading={loading}/>\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Helmet from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 36px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span`\n    font-size: 16px;\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 16px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 80%;\n`;\n\nconst TabContainer = styled.ul`\n    width: 80%;\n    height: 40px;\n    background-color: rgba(255, 255, 255, 0.3);\n    margin-top: 30px;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n`;\n\nconst Tab = styled.li`\n    font-size: 16px;\n    text-align: center;\n    width: 120px;\n    height: 50px;\n    opacity: 0.7;\n    &:hover {\n        opacity: 1;\n    }\n    border-bottom: 3px solid ${props => (\n        props.current\n            ? \"#3498db\"\n            : \"transparent\"\n    )};\n    transition: border-bottom 0.5s ease-in-out, opacity 0.1s ease-in-out;\n`;\n\nconst ALink = styled.a`\n    height: 50px;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display:flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) => (\n    loading\n        ? <><Helmet><title>Koflix | Loading</title></Helmet><Loader /></>\n        : (<Container>\n            <Helmet><title>Koflix | {\n                result.original_title\n                    ? result.title\n                    : result.name\n            }</title></Helmet>\n            <Backdrop\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n            <Content>\n                <Cover\n                    bgImage={result.poster_path\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                        : require('../../assets/nothing.jpg')} />\n                <Data>\n                    <Title>{\n                        result.original_title\n                            ? result.title\n                            : result.name\n                    }</Title>\n                    <ItemContainer>\n                        <Item>{\n                            result.release_date\n                                ? result\n                                    .release_date\n                                    .substring(0, 4)\n                                : result\n                                    .last_air_date\n                                    .substring(0, 4)\n                        }</Item>\n                        <Divider>•</Divider>\n                        <Item>{\n                            result.runtime\n                                ? result.runtime\n                                : result.episode_run_time[0]\n                        }\n                            min</Item>\n                        <Divider>•</Divider>\n                        <Item>{\n                            result.genres && result\n                                .genres\n                                .map(\n                                    (element, index) => index === result.genres.length - 1\n                                        ? element['name']\n                                        : `${element['name']} / `\n                                )\n                        }</Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                    <TabContainer>\n                        <Tab>\n                            <ALink href={`https://www.youtube.com/watch?v=${result.videos.results[0].key}`} target='_blank'>Youtube</ALink>\n                        </Tab>\n                        <Tab>\n                            <SLink>Season</SLink>\n                        </Tab>\n                        <Tab>\n                            <SLink>Production Company</SLink>\n                        </Tab>\n                    </TabContainer>\n                </Data>\n            </Content>\n        </Container>)\n);\n\nDetailPresenter.prototype = {\n    result: PropTypes.object,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React, {Component} from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport {moviesApi} from 'api';\nimport {tvApi} from 'api';\n\nexport default class DetailContainer extends Component {\n    constructor(props) {\n        super(props);\n        const {match: {\n                path\n            }} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: path.includes('movie')\n        };\n    }\n\n    componentDidMount = async () => {\n        const {\n            match: {\n                params: {\n                    id\n                }\n            },\n            history: {\n                push\n            }\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push('/');\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({data:result} = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({data:result} = await tvApi.tvDetail(parsedId));\n            }\n        } catch  {\n            this.setState({error: \"Can't find anything.\"});\n        } finally {\n            this.setState({loading: false, result})\n        }\n    }\n\n    render() {\n        const {result, error, loading} = this.state;\n        return <DetailPresenter result={result} error={error} loading={loading}/>;\n    }\n}\n","import React from 'react';\nimport {HashRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport Header from 'Components/Header'\nimport Home from 'Routes/Home';\nimport Search from 'Routes/Search';\nimport TV from 'Routes/TV';\nimport Detail from 'Routes/Detail'\n\nexport default() => (\n    <Router>\n        <Header/>\n        <Switch>\n            <Route path='/' exact component={Home}/>\n            <Route path='/tv' exact component={TV}/>\n            <Route path='/search' component={Search}/>\n            <Route path='/movie/:id' component={Detail}/>\n            <Route path='/show/:id' component={Detail}/>\n            <Redirect from='*' to='/'/>\n        </Switch>\n    </Router>\n);\n","import {createGlobalStyle} from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle `\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends Component {\n    render() {\n      return (\n        <>\n          <Router />\n          <GlobalStyles />\n        </>\n      );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}