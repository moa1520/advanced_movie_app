{"version":3,"sources":["assets/nothing.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Profile.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Collections.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","Banner","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","number","bool","HomePresenter","nowPlaying","popular","upcoming","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","array","API_KEY","api","axios","create","baseURL","moviesApi","get","params","api_key","language","movieDetail","append_to_response","search","query","tvApi","topRated","airingToday","tvDetail","collectionApi","getCollection","HomeContainer","useState","setNowPlaying","setUpcoming","setPopular","setError","setLoading","useEffect","a","data","results","fetchData","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","func","SearchContainer","setMovieResults","setTvResults","setSearchTerm","searchByTerm","event","preventDefault","target","TVPresenter","tv","name","TVContainer","setTopRated","setAiringToday","Profile","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","TabContainer","Tab","ALink","CLink","TabViewer","DetailPresenter","result","handleSeason","handleCreatedBy","season","original_title","backdrop_path","last_air_date","runtime","episode_run_time","genres","element","index","overview","videos","href","belongs_to_collection","onClick","seasons","created_by","profile_path","object","DetailContainer","componentDidMount","match","push","history","state","parsedId","parseInt","isNaN","setState","path","collection","includes","this","handleCollection","Component","Collections","LeftContent","bgImg","RightContent","CollectionPresenter","parts","part","CollectionContainer","exact","component","Home","TV","Search","Detail","Collection","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1074d5c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nothing.fe502a59.jpg\";","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header `\n    color: white;\n    position: fixed;\n    font-size: 16px;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul `\n    display: flex;\n`;\n\nconst Item = styled.li `\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => (\n    props.current\n        ? \"#3498db\"\n        : \"transparent\"\n)};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Banner = styled.li `\n    font-size:26px;\n    margin: 0 30px;\n    color: red;\n    opacity: 0.8;\n    &:hover{opacity:1.0;}\n    transition: opacity 0.2s ease-in-out;\n`;\n\nexport default withRouter(({location: {\n        pathname\n    }}) => (\n    <Header>\n        <List>\n            <Banner>\n                <SLink to='/'>Koflix</SLink>\n            </Banner>\n            <Item current={pathname === '/'}>\n                <SLink to='/'>Movies</SLink>\n            </Item>\n            <Item current={pathname === '/tv'}>\n                <SLink to='/tv'>TV</SLink>\n            </Item>\n            <Item current={pathname === '/search'}>\n                <SLink to='/search'>Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns:repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.prototype = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 100px;\n`;\n\nexport default() => <Container>\n    <span role='img' aria-label='Loading'>Loading...</span>\n</Container>","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span `\n    color: ${props => props.color};\n    font-size: 22px;\n`;\n\nconst Message = ({text, color}) => (<Container>\n    <Text color={color}>{text}</Text>\n</Container>);\n\nMessage.prototype = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  transition: opacity 0.1s linear;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 2px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/nothing.jpg\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 12 ? `${title.substring(0, 12)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.prototype = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message'\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => <>\n    <Helmet>\n        <title>Koflix | Movies</title>\n    </Helmet>\n    {loading\n        ? <Loader />\n        : <Container>\n            <Helmet>\n                <title>Koflix | Movies</title>\n            </Helmet>\n            {\n                nowPlaying && nowPlaying.length > 0 && <Section title='Now Playing'>{\n                    nowPlaying.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {\n                upcoming && upcoming.length > 0 && <Section title='Upcoming'>{\n                    upcoming.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {\n                popular && popular.length > 0 && <Section title='Popular'>{\n                    popular.map(\n                        movie => <Poster\n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.title}\n                            imageUrl={movie.poster_path}\n                            isMovie={true}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                        />\n                    )\n                }</Section>\n            }\n            {error && <Message color='#e74c3c' text={error} />}\n        </Container>} </>\n\nHomePresenter.prototype = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst API_KEY = \"803b005f53021a61c58a9a205576b6f5\";\nconst LANGUAGE = \"ko\";\n\nconst api = axios.create({ baseURL: \"https://api.themoviedb.org/3\" });\n\nexport const moviesApi = {\n  nowPlaying: () =>\n    api.get(\"/movie/now_playing\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  upcoming: () =>\n    api.get(\"/movie/upcoming\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  popular: () =>\n    api.get(\"/movie/popular\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  movieDetail: id =>\n    api.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        append_to_response: \"videos\"\n      }\n    }),\n  search: query =>\n    api.get(\"/search/movie\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        query: query\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () =>\n    api.get(\"/tv/top_rated\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  popular: () =>\n    api.get(\"/tv/popular\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  airingToday: () =>\n    api.get(\"/tv/airing_today\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    }),\n  tvDetail: id =>\n    api.get(`/tv/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        append_to_response: \"videos\"\n      }\n    }),\n  search: query =>\n    api.get(\"/search/tv\", {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE,\n        query: query\n      }\n    })\n};\n\nexport const collectionApi = {\n  getCollection: id =>\n    api.get(`/collection/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: LANGUAGE\n      }\n    })\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;","import React, { useState, useEffect } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nconst HomeContainer = () => {\n  const [nowPlaying, setNowPlaying] = useState(null);\n  const [upcoming, setUpcoming] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results: nowPlaying }\n        } = await moviesApi.nowPlaying();\n        const {\n          data: { results: upcoming }\n        } = await moviesApi.upcoming();\n        const {\n          data: { results: popular }\n        } = await moviesApi.popular();\n        setNowPlaying(nowPlaying);\n        setUpcoming(upcoming);\n        setPopular(popular);\n      } catch {\n        setError(\"Can't find movies information.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <HomePresenter\n      nowPlaying={nowPlaying}\n      upcoming={upcoming}\n      popular={popular}\n      error={error}\n      loading={loading}\n    />\n  );\n};\n\nexport default HomeContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from '../../Components/Loader';\nimport Section from '../../Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    error,\n    loading,\n    handleSubmit,\n    updateTerm\n}) => <Container>\n        <Helmet><title>Koflix | Search</title></Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder='Search Movies or TV Shows...'\n                value={searchTerm}\n                onChange={updateTerm}></Input>\n        </Form>\n        {\n            loading\n                ? <Loader />\n                : <> {\n                    movieResults && movieResults.length > 0 && <Section title='Movie Results'>{\n                        movieResults.map(\n                            movie => <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                title={movie.title}\n                                imageUrl={movie.poster_path}\n                                isMovie={true}\n                                rating={movie.vote_average}\n                                year={movie.release_date && movie\n                                    .release_date\n                                    .substring(0, 4)} />\n                        )\n                    }</Section>\n                } {\n                        tvResults && tvResults.length > 0 && <Section title='TV Results'>{\n                            tvResults.map(\n                                show => <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    title={show.original_name}\n                                    imageUrl={show.poster_path}\n                                    rating={show.vote_average}\n                                    year={show.first_air_date && show\n                                        .first_air_date\n                                        .substring(0, 4)}\n                                    isMovie={false} />\n                            )\n                        }</Section>\n                    } {\n                        error && <Message color='#e74c3c' text={error} />\n                    } {\n                        movieResults && tvResults && movieResults.length === 0 && tvResults.length === 0 && <Message text='Nothing found' color='#b2bec3' />\n                    }\n                </>\n        }\n    </Container>\n\nSearchPresenter.prototype = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;","import React, { useState } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nconst SearchContainer = () => {\n  const [movieResults, setMovieResults] = useState(null);\n  const [tvResults, setTvResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchTerm !== \"\") {\n      searchByTerm();\n    }\n  };\n\n  const updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    setSearchTerm(value);\n  };\n\n  const searchByTerm = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n    } catch {\n      setError(\"Can't find results.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <SearchPresenter\n      movieResults={movieResults}\n      tvResults={tvResults}\n      searchTerm={searchTerm}\n      error={error}\n      loading={loading}\n      handleSubmit={handleSubmit}\n      updateTerm={updateTerm}\n    />\n  );\n};\n\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    {\" \"}\n    <Helmet>\n      {\" \"}\n      <title>Koflix | TV Shows</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Koflix | TV Shows</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(tv => (\n              <Poster\n                key={tv.id}\n                id={tv.id}\n                title={tv.name}\n                imageUrl={tv.poster_path}\n                rating={tv.vote_average}\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}{\" \"}\n  </>\n);\n\nTVPresenter.prototype = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { useState, useEffect } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nconst TVContainer = () => {\n  const [topRated, setTopRated] = useState(null);\n  const [popular, setPopular] = useState(null);\n  const [airingToday, setAiringToday] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: { results: topRated }\n        } = await tvApi.topRated();\n        const {\n          data: { results: popular }\n        } = await tvApi.popular();\n        const {\n          data: { results: airingToday }\n        } = await tvApi.airingToday();\n        setTopRated(topRated);\n        setPopular(popular);\n        setAiringToday(airingToday);\n      } catch {\n        setError(\"Can't find TV information.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <TVPresenter\n      topRated={topRated}\n      popular={popular}\n      airingToday={airingToday}\n      error={error}\n      loading={loading}\n    />\n  );\n};\n\nexport default TVContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    font-size: 12px;\n`;\n\nconst Image = styled.div `\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div `\n    margin-bottom: 5px;\n    position: relative;\n`;\n\nconst Title = styled.span `\n    display: block;\n    margin-bottom: 2px;\n`;\n\nconst Profile = ({\n    id,\n    imageUrl,\n    title\n}) => (\n    <Container>\n        <ImageContainer>\n            <Image\n                bgUrl={imageUrl\n                    ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                    : require(\"../assets/nothing.jpg\")}/>\n        </ImageContainer>\n        <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n    </Container>\n);\n\nProfile.prototype = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n}\n\nexport default Profile;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Poster from \"Components/Poster\";\nimport Profile from \"Components/Profile\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 36px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span`\n  font-size: 16px;\n`;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 16px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 80%;\n`;\n\nconst TabContainer = styled.ul`\n  width: 80%;\n  height: 40px;\n  background-color: rgba(255, 255, 255, 0.3);\n  margin-top: 30px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  margin-bottom: 30px;\n`;\n\nconst Tab = styled.li`\n  font-size: 16px;\n  text-align: center;\n  width: 120px;\n  height: 50px;\n  opacity: 0.7;\n  &:hover {\n    opacity: 1;\n  }\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out, opacity 0.1s ease-in-out;\n`;\n\nconst ALink = styled.a`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst SLink = styled.div`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nconst CLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TabViewer = styled.div`\n  margin-bottom: 50px;\n`;\n\nconst DetailPresenter = ({\n  result,\n  handleSeason,\n  handleCreatedBy,\n  create,\n  isMovie,\n  season,\n  error,\n  loading\n}) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Koflix | Loading</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          Koflix | {result.original_title ? result.title : result.name}\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/nothing.jpg\")\n          }\n        />\n        <Data>\n          <Title>{result.original_title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.last_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]}\n              min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((element, index) =>\n                  index === result.genres.length - 1\n                    ? element[\"name\"]\n                    : `${element[\"name\"]} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          <TabContainer>\n            {result.videos.results.length > 0 ? (\n              <Tab>\n                <ALink\n                  href={`https://www.youtube.com/watch?v=${result.videos.results[0].key}`}\n                  target=\"_blank\"\n                >\n                  Youtube\n                </ALink>\n              </Tab>\n            ) : null}\n            {isMovie ? (\n              <Tab>\n                <CLink\n                  to={\n                    result.belongs_to_collection\n                      ? `/collection/${result.belongs_to_collection.id}`\n                      : null\n                  }\n                >\n                  Collection\n                </CLink>\n              </Tab>\n            ) : (\n              <Tab>\n                <SLink onClick={handleSeason}>Season</SLink>\n              </Tab>\n            )}\n            {isMovie ? null : (\n              <Tab>\n                <SLink onClick={handleCreatedBy}>Created By</SLink>\n              </Tab>\n            )}\n          </TabContainer>\n          <TabViewer>\n            {result.seasons && season === true && (\n              <Section title=\"Season\">\n                {result.seasons.map(show => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    title={show.name}\n                    imageUrl={show.poster_path}\n                  />\n                ))}\n              </Section>\n            )}{\" \"}\n            {result.created_by && create === true && (\n              <Section title=\"Created By\">\n                {result.created_by.map(show => (\n                  <Profile\n                    key={show.id}\n                    id={show.id}\n                    title={show.name}\n                    imageUrl={show.profile_path}\n                  />\n                ))}\n              </Section>\n            )}\n          </TabViewer>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.prototype = {\n  result: PropTypes.object,\n  handleSeason: PropTypes.func,\n  handleCreatedBy: PropTypes.func,\n  create: PropTypes.bool,\n  season: PropTypes.bool,\n  error: PropTypes.string,\n  isMovie: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi } from \"api\";\nimport { tvApi } from \"api\";\n\nexport default class DetailContainer extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: { path }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      season: false,\n      create: false,\n      collection: false,\n      isMovie: path.includes(\"movie\")\n    };\n  }\n\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.tvDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  };\n\n  render() {\n    const {\n      result,\n      season,\n      create,\n      collection,\n      error,\n      loading,\n      isMovie\n    } = this.state;\n\n    const handleSeason = () => {\n      if (season === true) {\n        this.setState({ season: false });\n      } else {\n        this.setState({ season: true });\n      }\n    };\n\n    const handleCollection = () => {\n      if (collection === true) {\n        this.setState({ collection: false });\n      } else {\n        this.setState({ collection: true });\n      }\n    };\n\n    const handleCreatedBy = () => {\n      if (create === true) {\n        this.setState({ create: false });\n      } else {\n        this.setState({ create: true });\n      }\n    };\n\n    return (\n      <DetailPresenter\n        result={result}\n        create={create}\n        season={season}\n        collection={collection}\n        handleCollection={handleCollection}\n        isMovie={isMovie}\n        handleCreatedBy={handleCreatedBy}\n        handleSeason={handleSeason}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  display: flex;\n  font-size: 16px;\n  margin-bottom: 50px;\n  margin-left: 50px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 240px;\n  width: 170px;\n  background-size: cover;\n  border-radius: 4px;\n  margin-right: 10px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 15px;\n  position: absolute;\n  font-size: 12px;\n  transition: opacity 0.1s linear;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst Overview = styled.span`\n  font-size: 18px;\n  opacity: 0.7;\n`;\n\nconst CLink = styled(Link)``;\n\nconst Collections = ({ id, title, imageUrl, rating, overview }) => (\n  <Container>\n    <CLink to={`/movie/${id}`}>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/nothing.jpg\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n    </CLink>\n    <div>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Overview>{overview}</Overview>\n    </div>\n  </Container>\n);\n\nCollections.propTypes = {\n  title: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  rating: PropTypes.string\n};\n\nexport default Collections;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"Components/Loader\";\nimport Collections from \"Components/Collections\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n  display: flex;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst LeftContent = styled.div`\n  display: block;\n  position: relative;\n  width: 30%;\n`;\n\nconst Title = styled.div`\n  font-size: 36px;\n  margin-bottom: 40px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgImg});\n  background-size: cover;\n  background-position: center center;\n  border-radius: 10px;\n  height: 480px;\n  width: 340px;\n`;\n\nconst RightContent = styled.div`\n  position: relative;\n  display: block;\n`;\n\nconst CollectionPresenter = ({ result, error, loading }) => {\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <LeftContent>\n        <Title>{result.name}</Title>\n        <Image\n          bgImg={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n        />\n      </LeftContent>\n      <RightContent>\n        {result.parts.map(part => (\n          <Collections\n            id={part.id}\n            title={part.title}\n            imageUrl={part.poster_path}\n            rating={part.vote_average}\n            overview={part.overview}\n          />\n        ))}\n      </RightContent>\n    </Container>\n  );\n};\n\nCollectionPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React, { Component } from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\nimport { collectionApi } from \"api\";\n\nexport default class CollectionContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      error: null,\n      loading: true\n    };\n  }\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id }\n      }\n    } = this.props;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return;\n    }\n    let result = null;\n    try {\n      ({ data: result } = await collectionApi.getCollection(parsedId));\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  };\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <CollectionPresenter result={result} error={error} loading={loading} />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Detail from \"Routes/Detail\";\nimport Collection from \"Routes/Collection\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Route path=\"/collection/:id\" component={Collection} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import {createGlobalStyle} from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle `\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, {Component} from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends Component {\n    render() {\n      return (\n        <>\n          <Router />\n          <GlobalStyles />\n        </>\n      );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}